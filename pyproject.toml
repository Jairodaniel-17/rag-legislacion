[project]
name = "rag-legislacion"
version = "0.1.0"
description = "Sistema de Recuperación y Generación Aumentada (RAG) para documentos legislativos. Permite procesar, indexar y consultar documentación legal utilizando modelos de lenguaje y búsqueda semántica."
readme = "README.md"
requires-python = ">=3.11"
authors = [
    { name = "Jairo Daniel Mendoza Torres", email = "jairodaniel.mt@gmail.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Legal Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Topic :: Text Processing :: General",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "docx2txt>=0.8",
    "faiss-cpu>=1.10.0",
    "langchain>=0.3.18",
    "langchain-community>=0.3.17",
    "langchain-core>=0.3.35",
    "langchain-ollama>=0.2.3",
    "langchain-openai>=0.3.6",
    "loguru>=0.7.3",
    "pdfplumber>=0.11.5",
    "pymupdf>=1.25.3",
    "python-docx>=1.1.2",
    "requests>=2.32.3",
    "rich>=13.9.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.4",
    "black>=25.1.0",
    "isort>=6.0.0",
    "mypy>=1.0",
    "ruff>=0.1.0",
]

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.11"
strict = true
ignore_missing_imports = true

[tool.ruff]
line-length = 88
target-version = "py311"
select = ["E", "F", "B", "I"]
